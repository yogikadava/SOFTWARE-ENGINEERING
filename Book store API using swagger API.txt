openapi: 3.0.3
info:
  title: Book Store API
  description: |
    A sample API for managing books, authors, and orders in a book store.
    This specification is based on the OpenAPI 3.0 standard.
  version: 1.0.0
servers:
  - url: https://bookstore.example.com/api/v1
tags:
  - name: book
    description: Operations related to books
  - name: author
    description: Operations related to authors
  - name: order
    description: Manage book orders
paths:
  /books:
    get:
      tags:
        - book
      summary: List all books
      description: Retrieve a list of all books in the store.
      responses:
        '200':
          description: A list of books
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
    post:
      tags:
        - book
      summary: Add a new book
      description: Add a new book to the store.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
        required: true
      responses:
        '201':
          description: Book created successfully
  /books/{bookId}:
    get:
      tags:
        - book
      summary: Get a book by ID
      description: Retrieve details of a specific book.
      parameters:
        - name: bookId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Book details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
        '404':
          description: Book not found
    put:
      tags:
        - book
      summary: Update a book
      description: Update the details of an existing book.
      parameters:
        - name: bookId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
        required: true
      responses:
        '200':
          description: Book updated successfully
    delete:
      tags:
        - book
      summary: Delete a book
      description: Delete a book by its ID.
      parameters:
        - name: bookId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Book deleted successfully
  /authors:
    get:
      tags:
        - author
      summary: List all authors
      description: Retrieve a list of all authors.
      responses:
        '200':
          description: A list of authors
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Author'
  /authors/{authorId}:
    get:
      tags:
        - author
      summary: Get an author by ID
      description: Retrieve details of a specific author.
      parameters:
        - name: authorId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Author details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Author'
        '404':
          description: Author not found
components:
  schemas:
    Book:
      type: object
      required:
        - title
        - authorId
      properties:
        id:
          type: integer
          example: 1
        title:
          type: string
          example: "The Great Gatsby"
        authorId:
          type: integer
          example: 101
        publishedYear:
          type: integer
          example: 1925
        genre:
          type: string
          example: "Fiction"
    Author:
      type: object
      required:
        - name
      properties:
        id:
          type: integer
          example: 101
        name:
          type: string
          example: "F. Scott Fitzgerald"
        biography:
          type: string
          example: "An American novelist and short-story writer of the Jazz Age."
        birthYear:
          type: integer
          example: 1896
